# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Web browser
set $browser firefox
set $browser2 qutebrowser
# Email
set $mail $term --class neomutt --title Neomutt -e neomutt
set $chat /usr/bin/slack --ozone-platform=wayland
# File manager
set $fileman $term --class nnn -e nnn
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
#set $menu demnu_path | wofi -I --show run | xargs swaymsg exec --
#set $appmenu dmenu_path | wofi -I --show drun -i | xargs swaymsg exec --
set $menu dmenu_path | bemenu --tf "#C099FF" --hf "#C099FF" -i | xargs swaymsg exec --

set $appmenu j4-dmenu-desktop --dmenu="bemenu --tf '#C099FF' --hf '#C099FF' -i" --term=kitty | xargs swaymsg exec --
# Output
set $out1 eDP-1
# Background
# set $background /usr/share/backgrounds/f37/default/f37-01-night.png
# set $background /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png
set $background /home/vandal/Pictures/Wallpapers/forest.jpg
# Lock screen
set $lock swaylock -f -i $background
# Input
set $touchpad "1739:52542:SYNA2B31:00_06CB:CD3E_Touchpad"
set $finger "1386:20963:Wacom_HID_51E3_Finger"
set $pen "1386:20963:Wacom_HID_51E3_Pen"
# Volume
set $sink_volume pactl get-sink-volume @DEFAULT_SINK@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $source_volume pactl get-source-volume @DEFAULT_SOURCE@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
# Custom commands
set $bin ~/.local/bin/sway
set $screenshot grim ~/Pictures/Screenshot-$(date +"%Y-%m-%d-%H-%M-%S").png
set $areashot slurp | grim -g - ~/Pictures/Screenshot-$(date +"%Y-%m-%d-%H-%M-%S").png
set $screenclip grim - | wl-copy
set $areaclip slurp | grim  -g - - | wl-copy
set $colorpicker $bin/colorpicker
set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $background fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
# Built-in display
output $out1 {
    resolution 3840x2160
    position 0,360
    scale 2.0
}
# External monitor (plugged with HDMI)
output DP-2 {
    resolution 3840x2160
    position 1920,0
    scale 1.5
}
# External monitor (plugged with dock HDMI)
output DP-6 {
    resolution 3840x2160
    position 1920,0
    scale 1.5
}
# External monitor (plugged with dock HDMI)
output DP-5 {
    resolution 3840x2160
    position 1920,0
    scale 1.5
}
# External monitor (plugged with dock DP)
output DP-4 {
    resolution 3840x2160
    position 1920,0
    scale 1.5
}

### Idle configuration
exec swayidle -w \
         timeout 300 '$lock' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep '$lock'

### Input configuration
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "type:keyboard" {
    repeat_delay 250
    xkb_layout "us"
    # xkb_variant ",altgr-intl"
    xkb_variant "altgr-intl"
    # xkb_options "grp:alt_space_toggle,caps:swapescape,compose:ralt"
    # xkb_options "caps:swapescape"
    # xkb_options "ctrl:swapcaps"
}
# Touchpad
input $touchpad {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}
input $finger map_to_output $out1
input $pen map_to_output $out1

### General settings
# Mouse
seat seat0 hide_cursor 3000
focus_follows_mouse yes
mouse_warping output
# Borders
default_border pixel 2
default_floating_border normal 2
hide_edge_borders smart
smart_borders on
smart_gaps on
gaps inner 10
font Fira Code 10

### Floating windows
for_window [app_id="pavucontrol"] floating enable
for_window [app_id="gnome-font-viewer"] floating enable
for_window [app_id="pulseUI"] floating enable
for_window [app_id="blueberry.py"] floating enable
for_window [app_id="galculator"] floating enable
for_window [app_id="com.belmoussaoui.Authenticator"] floating enable
for_window [app_id="gnome-calculator"] floating enable
for_window [app_id="org.gnome.Calculator"] floating enable
for_window [app_id="zoom"] floating enable
for_window [app_id="gnome-terminal.*"] floating enable
for_window [app_id="jupyter-lab"] floating enable
for_window [app_id="soffice" title="Text Import.*"] floating enable
for_window [app_id="system-config-printer"] floating enable
for_window [app_id="nm-connection-editor"] floating enable
for_window [app_id="org.kde.okular" title="Transferring â€” Okular"] floating enable
for_window [app_id="ipython" title="Figure .*"] floating enable
for_window [app_id="python" title="Figure .*"] floating enable
for_window [class="Matplotlib" title="Figure .*"] floating enable
for_window [class="Zotero" title="ZotFile Preferences"] floating enable
for_window [app_id="python3" title="Figure .*"] floating enable
for_window [app_id="python3" title="matplotlib"] floating enable
for_window [app_id="firefox" title="Sharing Indicator"] floating enable
for_window [app_id="firefox" title="Library"] floating enable
for_window [app_id="firefox" title="Picture-in-Picture"] floating enable
for_window [app_id="org.gnome.Solanum"] floating enable
for_window [app_id="org.gnome.font-viewer"] floating enable
for_window [app_id="org.kde.kdeconnect*"] floating enable
for_window [class="edu-stsci-apt-controller-APT" title="Open"] floating enable
for_window [class="jetbrains-pycharm" title="win0"] floating enable
for_window [class="jetbrains-pycharm" title="splash"] floating enable
for_window [class="jetbrains-pycharm" title="Welcome to PyCharm"] floating enable
for_window [class="uk-ac-starlink-topcat-Driver"] floating enable
for_window [class="Ds9.tcl"] floating enable
for_window [class="TkMotifFDialog" title="Open"] floating enable
for_window [class="Toplevel"] floating enable
for_window [app_id="org.gnome.Settings"] floating enable
for_window [app_id="com.gitlab.newsflash"] floating enable
for_window [app_id="org.gnome.Calendar"] floating enable
for_window [app_id="org.gnome.baobab"] floating enable



### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $appmenu
    bindsym $mod+Shift+d exec $menu

    # Web browser(s)
    bindsym $mod+i exec $browser
    bindsym $mod+Shift+i exec $browser2

    # Emails
    bindsym $mod+m exec $mail
    bindsym $mod+Shift+m exec $chat

    # Files
    bindsym $mod+f exec $fileman

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload
    # Reoload the display config
    bindsym $mod+Shift+p exec pkill kanshi; exec kanshi

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+BackSpace exec $lock
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Move workspaces around outputs
    bindsym $mod+bracketleft move workspace output left
    bindsym $mod+braceleft move workspace output down
    bindsym $mod+bracketright move workspace output right
    bindsym $mod+braceright move workspace output up
    # Next/previous workspace
    bindsym $mod+n workspace next_on_output
    bindsym $mod+p workspace prev_on_output
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+Shift+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Make a floating window visible on all workspace
    bindsym $mod+Shift+s sticky toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent/child container
    bindsym $mod+a focus parent
    bindsym $mod+c focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# System/media keys
#
    # Special keys
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && $sink_volume > $WOBSOCK
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && $sink_volume > $WOBSOCK
    bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-mute @DEFAULT_SINK@ | sed -En "/no/ s/.*/$($sink_volume)/p; /yes/ s/.*/0/p"
    bindsym --locked XF86AudioMicMute exec $(pactl set-source-mute @DEFAULT_SOURCE@ toggle && pactl get-source-mute @DEFAULT_SOURCE@ | sed -En "/no/ s/.*/$($source_volume)/p; /yes/ s/.*/0/p"
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    # Bluetooth headset uses this
    bindsym --locked XF86AudioPlay exec playerctl play-pause
    # Bluetooth headset uses this
    bindsym --locked XF86AudioPause exec playerctl play-pause
    bindsym --locked XF86AudioNext exec playerctl next
    bindsym --locked XF86AudioPrev exec playerctl previous
    # Alternative playerctl bindings
    bindsym --locked $mod+Control+p exec playerctl play-pause
    bindsym --locked $mod+Control+bracketright exec playerctl next
    bindsym --locked $mod+Control+bracketleft exec playerctl previous
#
# Screenshot
#
    # Full screen
    bindsym --release Print exec $screenshot
    # Area
    bindsym --release Shift+Print exec $areashot
    # Full screen to clipboard
    bindsym --release Control+Print exec $screenclip
    # Area to clipboard
    bindsym --release Control+Shift+Print exec $areaclip
    # Colorpicker to clipboard
    bindsym $mod+Shift+o exec $colorpicker
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Running at startup
#
exec kanshi
exec udiskie
exec /usr/libexec/geoclue-2.0/demos/agent
exec /usr/libexec/kdeconnectd
exec /usr/bin/kdeconnect-indicator
exec gammastep
exec libinput-gestures-setup start
exec safeeyes

client.focused           #9aa5ce #16161d #c0caf5 #9aa5ce   #9aa5ce
client.focused_inactive  #16161d #16161d #c0caf5 #16161d   #16161d
client.unfocused         #16161d #16161d #c0caf5 #16161d   #16161d



#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }
bar swaybar_command waybar

include /etc/sway/config.d/*
